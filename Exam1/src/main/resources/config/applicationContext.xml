<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property
                name="locations"> <!-- PropertyPlaceholderConfigurer类中有个locations属性，接收的是一个数组，即我们可以在下面配好多个properties文件 -->
            <array>
                <value>classpath:config/db.properties</value>
            </array>
        </property>
    </bean>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> <!--dataSource属性指定要用到的连接池-->
        <property name="dataSource" ref="dataSource"/> <!--configLocation属性指定mybatis的核心配置文件-->
        <!-- sql映射文件路径 -->
        <!--<property name="mapperLocations" value="com.hand.infra.mapper/ActorMapper.xml"/>-->
        <property name="configLocation" value="config/applicationContext-mybatis.xml"/>
    </bean>
    <bean id="filmMapper"
          class="org.mybatis.spring.mapper.MapperFactoryBean"> <!--sqlSessionFactory属性指定要用到的SqlSessionFactory实例-->
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/> <!--mapperInterface属性指定映射器接口，用于实现此接口并生成映射器对象-->
        <property name="mapperInterface" value="com.hand.infra.mapper.FilmMapper"/>
    </bean>

    <bean id="filmServiceImpl" class="com.hand.api.service.impl.FilmServiceImpl">
        <constructor-arg ref="filmMapper"/>
    </bean>
    <bean class="com.hand.domain.ApplicationContextEvent"/>

    <!--<aop:config>-->
    <!--<aop:aspect id="myAspect" ref="actorServiceImpl">-->
    <!--<aop:pointcut id="actorServiceImpl" expression="execution(com.hand.api.service.impl.ActorServiceImpl)"/>-->
    <!--</aop:aspect>-->
    <!--</aop:config>-->

    <!--<aop:config>-->

    <!--<aop:aspect id="log" ref="logging">-->
    <!--<aop:pointcut id="selectAll" expression="execution(* com.hand.*.*(..))"/>-->
    <!--<aop:before pointcut-ref="selectAll" method="beforeAdvice"/>-->
    <!--<aop:after pointcut-ref="selectAll" method="afterAdvice"/>-->
    <!--<aop:after-returning pointcut-ref="selectAll" returning="retVal" method="afterReturningAdvice"/>-->
    <!--<aop:after-throwing pointcut-ref="selectAll" throwing="ex" method="AfterThrowingAdvice"/>-->
    <!--</aop:aspect>-->
    <!--</aop:config>-->
    <!--<bean id="student" class="com.hand.domain.entity.Student">-->
    <!--<property name="name" value="Zara"/>-->
    <!--<property name="age" value="11"/>-->
    <!--</bean>-->

    <!--<bean id="logging" class="com.hand.infra.util.Logging"/>-->

    <bean id="timeHandler" class="com.hand.infra.util.FilmEvent"/>

    <aop:config>
    <aop:aspect id="time" ref="timeHandler">
    <aop:pointcut id="addAllMethod" expression="execution(* com.hand.api.service.FilmService.add*(..))"/>
    <aop:before method="BeforeInsertFilmEvent" pointcut-ref="addAllMethod"/>
    <aop:after method="AfterInsertFilmEvent" pointcut-ref="addAllMethod"/>
    </aop:aspect>
    </aop:config>

    <!-- 配置事务管理 -->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--使用注释事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--<tx:advice id="transactionAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--<tx:method name="delete*" propagation="REQUIRED" />-->
    <!--<tx:method name="add*" propagation="REQUIRED" />-->
    <!--<tx:method name="save*" propagation="REQUIRED" />-->
    <!--<tx:method name="update*" propagation="REQUIRED" />-->
    <!--<tx:method name="find*" read-only="true" />-->
    <!--<tx:method name="get*" read-only="true" />-->
    <!--<tx:method name="select*" read-only="true" />-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--<aop:config>-->
    <!--&lt;!&ndash; 第一个"*"代表所有类, 第二个"*"代表所有方法, ".."代表任意参数 &ndash;&gt;-->
    <!--<aop:pointcut id="pointcut" expression="execution(* com.hand.api.service.*.*(..))" />-->
    <!--<aop:advisor pointcut-ref="pointcut" advice-ref="transactionAdvice" />-->
    <!--</aop:config>-->


</beans>